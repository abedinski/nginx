env MINIO_ACCESS_KEY;
env MINIO_SECRET_KEY;
env S3_BUCKET_NAME;

worker_processes 4;

events {
    use epoll;
    accept_mutex on;
    worker_connections 1024;
}

http {
    gzip on;
    gzip_comp_level 2;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/plain text/html text/css text/xml
            application/x-javascript application/xml
            application/atom+xml text/javascript;

    server_tokens off;

    access_log /dev/stdout;
    error_log /dev/stderr;

    sendfile on;

    proxy_next_upstream error http_502;

    proxy_read_timeout 200;
    tcp_nopush on;
    tcp_nodelay on;

    client_body_timeout 60;
    client_header_timeout 60;
    keepalive_timeout 65;

    server {
        resolver                 8.8.8.8;
        listen                   [::]:8888;
        listen                   8888;
        client_max_body_size     100m;
        client_body_buffer_size  1m;

        location /upload {
            if ($request_method != POST) {
              return 405;
            }
            mirror                      /minio;
            proxy_set_body              off;
            proxy_pass_header           Server;
            proxy_set_header            Content-Encoding '';
            proxy_set_header            X-Content-Encoding $http_content_encoding;
            proxy_set_header            X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header            X-Real-IP $remote_addr;
            proxy_set_header            X-Scheme $scheme;
            proxy_set_header            Host $http_host;
            proxy_set_header            X-File-URL $request_id;
            proxy_redirect              off;
            proxy_pass                  http://traefik:80/passthrough;
        }

        location /minio {
            internal;

            set_secure_random_alphanum $prefix 64;
            set_sha1 $prefixsha $prefix;
            set_by_lua $date "return ngx.cookie_time(ngx.time())";
            set_sha1 $datesha $date;
            set $upload_id $prefixsha$datesha;
            set_by_lua $bucket "return os.getenv('S3_BUCKET_NAME')";
            set $url http://minio:9000/$bucket/$request_id;
            set_by_lua $aws_access_key "return os.getenv('MINIO_ACCESS_KEY')";
            set_by_lua $aws_secret_key "return os.getenv('MINIO_SECRET_KEY')";
            set $acl public-read;
            set $canonicalized_amz_headers "x-amz-acl:$acl\nx-amz-date:$date";
            set $canonicalized_resource "/$bucket/$request_id";
            set $string_to_sign "PUT\n$http_content_md5\n$http_content_type\n\n$canonicalized_amz_headers\n$canonicalized_resource";
            set_by_lua $aws_signature "return ngx.encode_base64(ngx.hmac_sha1(ngx.var.aws_secret_key, ngx.var.string_to_sign))";

            proxy_set_header Authorization "AWS $aws_access_key:$aws_signature";
            proxy_set_header x-amz-acl $acl;
            proxy_set_header x-amz-date $date;
            proxy_hide_header x-amz-id-2;
            proxy_hide_header x-amz-request-id;
            add_header X-File-URL $url;

            resolver 8.8.8.8 valid=300s;
            resolver_timeout 10s;

            proxy_pass $url;
        }

        location /nginx_status {
            stub_status;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

    }
}
